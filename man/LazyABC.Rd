% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/LazyABC.R
\name{LazyABC}
\alias{LazyABC}
\title{Lazy Approximate Bayesian Computation}
\usage{
LazyABC(data, rimport, dimport, prior, simInit, simCont, alpha,
  tolerance = 0.1, n = 10000)
}
\arguments{
\item{data}{an observation}

\item{rimport}{a function that samples from the importance distribution}

\item{dimport}{a function taking theta and returning its density from the
importance distribution}

\item{prior}{a function taking theta and returning its density from the prior}

\item{simInit}{a function taking theta performing initial simulation}

\item{simCont}{a function taking theta and x completing the simulation}

\item{alpha}{a function taking theta and the intermediate simulations
returning a number (0,1] to determine the probability of continuing}

\item{tolerance}{the epsilon tolerance to accept simulations}

\item{n}{number of iterations to run}
}
\value{
n weighted samples of the parameter from the posterior distribution.
}
\description{
Lazily perform importance ABC sampling on user specified distributions.
}
\details{
This is a demo implementation of Dennis Prangle's Lazy ABC algorithm.
}
\examples{
obs <- sapply(1:100, function(x){rnorm(1, (-3)*x, 1)})
LazyABC(obs,
rimport = function(){rnorm(1, 5, 5)},
dimport = function(x){dnorm(x, 5, 5)},
prior = function(x){dunif(x, 0, 10)},
simInit = function(x){rnorm(1, (x+2)*(x-2), 1)},
simCont = function(theta, x){
  c(x, data <- sapply(2:100, function(x){rnorm(1, (theta+2)*(theta-2)*x, 1)}))
  },
  alpha = function(theta, x){if(abs(x + 2.63) < 1){1} else {0.1}}, tol = 1000, n = 10000)
}

